name: Build
'on':
  push:
    branches:
      - main
      - experimental
  pull_request:
    branches:
      - main
      - experimental
  workflow_dispatch: null
jobs:
  buildLinux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: latest
      - name: Install Haxelib
        run: |
          sudo apt-get install libvlc-dev
          sudo apt-get install libvlccore-dev
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxe -cp ./setup -D analyzer-optimize -main Main --interp
      - name: Skip SScript setup mode
        run: >-
          echo 'oy9:showMacroty8:loopCosti25y10:includeAllfg' >>
          ~/settings.cocoa
      - name: Create Version Tag
        run: 'echo "${{github.run_id}}" > VERSION'
      - name: Compile
        run: >
          haxelib fixrepo

          haxelib run lime build Project.xml linux --app-version="4.0.0-${{
          github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: linuxBuild
          path: export/release/linux/bin
  buildWindows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2.3.0
      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: latest
      - name: Install Haxelib
        run: |
          haxelib setup C:/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxe -cp ./setup -D analyzer-optimize -main Main --interp
        shell: cmd
      - name: Skip SScript setup mode
        run: >-
          echo 'oy9:showMacroty8:loopCosti25y10:includeAllfg' >>
          %USERPROFILE%/settings.cocoa
        shell: cmd
      - name: Create Version Tag
        run: 'echo "${{github.run_id}}" > VERSION'
      - name: Compile
        run: >-
          haxelib run lime build windows --app-version="4.0.0-${{
          github.run_id}}"
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: windowsBuild
          path: export/release/windows/bin
  buildMac:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: krdlab/setup-haxe@master
        with:
          haxe-version: 4.2.5
      - name: Install Haxelib
        run: |
          haxelib setup ~/haxelib
          haxelib install hxcpp > /dev/null --quiet
          haxe -cp ./setup -D analyzer-optimize -main Main --interp
      - name: Skip SScript setup mode
        run: >-
          echo 'oy9:showMacroty8:loopCosti25y10:includeAllfg' >>
          ~/settings.cocoa
      - name: Create Version Tag
        run: 'echo "${{github.run_id}}" > VERSION'
      - name: Compile
        run: 'haxelib run lime build mac --app-version="4.0.0-${{ github.run_id}}"'
      - name: Publish Artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: macBuild
          path: export/release/macos/bin
